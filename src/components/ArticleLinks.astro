---
import type { CollectionEntry } from 'astro:content'
import { FormattedDate } from 'astro-pure/user'

interface Props {
  posts: CollectionEntry<'blog'>[]
  showDate?: boolean
  showDescription?: boolean
  groupByYear?: boolean
  className?: string
}

const { posts, showDate = true, showDescription = false, groupByYear = false, className = '' } = Astro.props

// Group posts by year if requested
const groupedPosts = groupByYear 
  ? posts.reduce((acc, post) => {
      const year = post.data.publishDate.getFullYear()
      if (!acc[year]) acc[year] = []
      acc[year].push(post)
      return acc
    }, {} as Record<number, CollectionEntry<'blog'>[]>)
  : null

// Generate post URL using custom slug or default id
const getPostUrl = (post: CollectionEntry<'blog'>) => {
  const slug = (post.data as any).slug || post.id
  return `/blog/${slug}`
}
---

<div class={`article-links ${className}`}>
  {groupByYear && groupedPosts ? (
    <!-- Grouped by year display -->
    {Object.entries(groupedPosts)
      .sort(([a], [b]) => Number(b) - Number(a))
      .map(([year, yearPosts]) => (
        <div class="year-group mb-8">
          <h3 class="text-xl font-semibold mb-4 text-primary">{year} 年</h3>
          <ul class="space-y-3">
            {yearPosts.map((post) => (
              <li class="flex items-start gap-3">
                {showDate && (
                  <FormattedDate 
                    class="text-sm text-muted-foreground min-w-[80px] mt-0.5" 
                    date={post.data.publishDate} 
                  />
                )}
                <div class="flex-1">
                  <a 
                    href={getPostUrl(post)}
                    class="text-foreground hover:text-primary transition-colors duration-200 font-medium"
                    data-astro-prefetch
                  >
                    {post.data.draft && <span class="text-red-500 text-sm">[草稿] </span>}
                    {post.data.title}
                  </a>
                  {showDescription && post.data.description && (
                    <p class="text-sm text-muted-foreground mt-1 line-clamp-2">
                      {post.data.description}
                    </p>
                  )}
                  {post.data.tags && post.data.tags.length > 0 && (
                    <div class="flex flex-wrap gap-1 mt-2">
                      {post.data.tags.map((tag: string) => (
                        <span class="text-xs bg-muted text-muted-foreground px-2 py-1 rounded-full">
                          {tag}
                        </span>
                      ))}
                    </div>
                  )}
                </div>
              </li>
            ))}
          </ul>
        </div>
      ))
    }
  ) : (
    <!-- Simple list display -->
    <ul class="space-y-3">
      {posts.map((post) => (
        <li class="flex items-start gap-3">
          {showDate && (
            <FormattedDate 
              class="text-sm text-muted-foreground min-w-[80px] mt-0.5" 
              date={post.data.publishDate} 
            />
          )}
          <div class="flex-1">
            <a 
              href={getPostUrl(post)}
              class="text-foreground hover:text-primary transition-colors duration-200 font-medium"
              data-astro-prefetch
            >
              {post.data.draft && <span class="text-red-500 text-sm">[草稿] </span>}
              {post.data.title}
            </a>
            {showDescription && post.data.description && (
              <p class="text-sm text-muted-foreground mt-1 line-clamp-2">
                {post.data.description}
              </p>
            )}
            {post.data.tags && post.data.tags.length > 0 && (
              <div class="flex flex-wrap gap-1 mt-2">
                {post.data.tags.map((tag: string) => (
                  <span class="text-xs bg-muted text-muted-foreground px-2 py-1 rounded-full">
                    {tag}
                  </span>
                ))}
              </div>
            )}
          </div>
        </li>
      ))}
    </ul>
  )}
</div>

<style>
  .article-links a:hover {
    text-decoration: underline;
    text-underline-offset: 4px;
  }
  
  .year-group:not(:last-child) {
    border-bottom: 1px solid hsl(var(--border));
    padding-bottom: 2rem;
  }
</style>
